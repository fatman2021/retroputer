.segment __current__ kmemmap.basic.code-start .append {
    statement-handlers:
        .word handler-syntax-error             # 128, ABS
        .word handler-syntax-error             # 129, AND
        .word handler-syntax-error             # 130, ASC
        .word handler-syntax-error             # 131, ATN
        .word handler-syntax-error             # 132, AT
        .word token-not-impl                   # 133, BOX
        .word token-not-impl                   # 134, CALL
        .word token-not-impl                   # 135, CATALOG
        .word handler-syntax-error             # 136, CHRS$
        .word handler-syntax-error             # 137, CHR$
        .word token-not-impl                   # 138, CIRCLE
        .word handler-clear-screen             # 139, CLS
        .word token-not-impl                   # 140, CLOSE
        .word token-not-impl                   # 141, CONTINUE,CONT
        .word token-not-impl                   # 142, COLOR
        .word token-not-impl                   # 143, COPY
        .word handler-syntax-error             # 144, COS
        .word token-not-impl                   # 145, DATA
        .word token-not-impl                   # 146, DEFFN
        .word token-not-impl                   # 147, DEFSUB
        .word token-not-impl                   # 148, DIM
        .word token-not-impl                   # 149, DO
        .word token-not-impl                   # 150, DRAW
        .word token-not-impl                   # 151, ELSE
        .word token-not-impl                   # 152, ENDSUB
        .word token-not-impl                   # 153, ENDFN
        .word token-not-impl                   # 154, ENDIF
        .word token-not-impl                   # 155, END
        .word handler-syntax-error             # 156, EXP
        .word token-not-impl                   # 157, FILL
        .word token-not-impl                   # 158, FOR
        .word token-not-impl                   # 159, FROM
        .word handler-syntax-error             # 160, GETKEY$
        .word token-not-impl                   # 161, GOSUB
        .word handler-goto                     # 162, GOTO
        .word handler-syntax-error             # 163, HEX$
        .word handler-home                     # 164, HOME
        .word handler-if                       # 165, IF
        .word token-not-impl                   # 166, INPUT
        .word handler-syntax-error             # 167, INT
        .word handler-syntax-error             # 168, IN
        .word handler-layer                    # 169, LAYER
        .word handler-syntax-error             # 170, LEFT$
        .word handler-syntax-error             # 171, LEN
        .word handler-let                      # 172, LET
        .word token-not-impl                   # 173, LINE
        .word handler-list                     # 174, LIST
        .word token-not-impl                   # 175, LOAD
        .word handler-syntax-error             # 176, LOG
        .word token-not-impl                   # 177, LOOP
        .word handler-syntax-error             # 178, LOWER$
        .word token-not-impl                   # 179, MEM
        .word handler-syntax-error             # 180, MID$
        .word token-not-impl                   # 181, MODE
        .word handler-syntax-error             # 182, MOUSE
        .word handler-new                      # 183, NEW
        .word token-not-impl                   # 184, NEXT
        .word handler-syntax-error             # 185, NOT
        .word token-not-impl                   # 186, OFF
        .word token-not-impl                   # 187, ON
        .word token-not-impl                   # 188, OPEN
        .word handler-syntax-error             # 189, OR
        .word handler-out                      # 190, OUT
        .word handler-syntax-error             # 191, PEEK
        .word token-not-impl                   # 192, PLAY
        .word token-not-impl                   # 193, POINT
        .word handler-poke                     # 194, POKE
        .word handler-print                    # 195, PRINT,?
        .word token-not-impl                   # 196, READ
        .word handler-rem                      # 197, REM,'
        .word token-not-impl                   # 198, RETURN
        .word handler-syntax-error             # 199, RIGHT$
        .word handler-syntax-error             # 200, RND
        .word token-not-impl                   # 201, RENAME
        .word token-not-impl                   # 202, REMOVE
        .word token-not-impl                   # 203, RESTORE
        .word handler-run                      # 204, RUN
        .word token-not-impl                   # 205, SAVE
        .word token-not-impl                   # 206, SCALE
        .word handler-syntax-error             # 207, SGN
        .word handler-syntax-error             # 208, SIN
        .word token-not-impl                   # 209, SIZE
        .word token-not-impl                   # 210, SOURCE
        .word handler-syntax-error             # 211, SPC
        .word handler-syntax-error             # 212, SPRATTR
        .word token-not-impl                   # 213, SPRITE
        .word handler-syntax-error             # 214, SQR
        .word handler-syntax-error             # 215, STEP
        .word handler-syntax-error             # 216, STICK
        .word handler-syntax-error             # 217, STOP
        .word handler-syntax-error             # 218, STR$
        .word token-not-impl                   # 219, SWAP
        .word handler-syntax-error             # 220, TAB
        .word handler-syntax-error             # 221, TAN
        .word handler-syntax-error             # 222, THEN
        .word token-not-impl                   # 223, TILESET
        .word handler-syntax-error             # 224, TIME
        .word handler-syntax-error             # 225, TO
        .word token-not-impl                   # 226, UNTIL
        .word handler-syntax-error             # 227, UPPER$
        .word handler-syntax-error             # 228, USR
        .word handler-syntax-error             # 229, VAL
        .word token-not-impl                   # 230, WHILE
        .word handler-syntax-error             # 231, +
        .word handler-syntax-error             # 232, -
        .word handler-syntax-error             # 233, -
        .word handler-syntax-error             # 234, *
        .word handler-syntax-error             # 235, /
        .word handler-syntax-error             # 236, %
        .word handler-syntax-error             # 237, ^
        .word handler-syntax-error             # 238, <>,!=
        .word handler-syntax-error             # 239, <=,=<
        .word handler-syntax-error             # 240, >=,=>
        .word handler-syntax-error             # 241, <
        .word handler-syntax-error             # 242, >
        .word handler-syntax-error             # 243, =
        .word handler-syntax-error             # 244, (
        .word handler-syntax-error             # 245, )
        .word handler-syntax-error             # 246, ,
        .word handler-syntax-error             # 247, ;
        .word token-not-impl                   # 248, :
        .word handler-syntax-error             # 249, REAL
        .word handler-assignment               # 250, VARIABLE
        .word handler-syntax-error             # 251, CODE_STRING
        .word handler-syntax-error             # 252, STRING
        .word handler-syntax-error             # 253, DWORD
        .word handler-syntax-error             # 254, WORD
        .word handler-syntax-error             # 255, BYTE
}

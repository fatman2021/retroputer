.segment __current__ kmemmap.basic.code-start .append {
    statement-handlers:
        .word handler-syntax-error             # 128, ABS
        .word handler-syntax-error             # 129, AND
        .word handler-syntax-error             # 130, ASC
        .word handler-syntax-error             # 131, ATN
        .word handler-syntax-error             # 132, AT
        .word token-not-impl                   # 133, CALL
        .word token-not-impl                   # 134, CATALOG
        .word handler-syntax-error             # 135, CHRS$
        .word handler-syntax-error             # 136, CHR$
        .word handler-clear-screen             # 137, CLS
        .word token-not-impl                   # 138, CLOSE
        .word token-not-impl                   # 139, CONTINUE,CONT
        .word handler-syntax-error             # 140, COS
        .word token-not-impl                   # 141, DATA
        .word token-not-impl                   # 142, DEFFN
        .word token-not-impl                   # 143, DEFSUB
        .word token-not-impl                   # 144, DIM
        .word token-not-impl                   # 145, DO
        .word token-not-impl                   # 146, ELSEIF
        .word token-not-impl                   # 147, ELSE
        .word token-not-impl                   # 148, ENDSUB
        .word token-not-impl                   # 149, ENDFN
        .word token-not-impl                   # 150, ENDIF
        .word token-not-impl                   # 151, END
        .word handler-syntax-error             # 152, EXP
        .word token-not-impl                   # 153, FOR
        .word handler-syntax-error             # 154, GETKEY$
        .word token-not-impl                   # 155, GOSUB
        .word handler-goto                     # 156, GOTO
        .word handler-syntax-error             # 157, HEX$
        .word handler-home                     # 158, HOME
        .word handler-if                       # 159, IF
        .word token-not-impl                   # 160, INPUT
        .word handler-syntax-error             # 161, INT
        .word handler-syntax-error             # 162, IN
        .word handler-syntax-error             # 163, LEFT$
        .word handler-syntax-error             # 164, LEN
        .word handler-let                      # 165, LET
        .word handler-list                     # 166, LIST
        .word token-not-impl                   # 167, LOAD
        .word handler-syntax-error             # 168, LOG
        .word token-not-impl                   # 169, LOOP
        .word handler-syntax-error             # 170, LOWER$
        .word handler-syntax-error             # 171, MID$
        .word handler-new                      # 172, NEW
        .word token-not-impl                   # 173, NEXT
        .word handler-syntax-error             # 174, NOT
        .word token-not-impl                   # 175, ON
        .word token-not-impl                   # 176, OPEN
        .word handler-syntax-error             # 177, OR
        .word handler-out                      # 178, OUT
        .word handler-syntax-error             # 179, PEEK
        .word handler-poke                     # 180, POKE
        .word handler-print                    # 181, PRINT,?
        .word token-not-impl                   # 182, READ
        .word handler-rem                      # 183, REM,'
        .word token-not-impl                   # 184, RETURN
        .word handler-syntax-error             # 185, RIGHT$
        .word handler-syntax-error             # 186, RND
        .word token-not-impl                   # 187, RENAME
        .word token-not-impl                   # 188, REMOVE
        .word token-not-impl                   # 189, RESTORE
        .word handler-run                      # 190, RUN
        .word token-not-impl                   # 191, SAVE
        .word handler-syntax-error             # 192, SGN
        .word handler-syntax-error             # 193, SIN
        .word handler-syntax-error             # 194, SPC
        .word handler-syntax-error             # 195, SQR
        .word handler-syntax-error             # 196, STEP
        .word handler-syntax-error             # 197, STOP
        .word handler-syntax-error             # 198, STR$
        .word handler-syntax-error             # 199, TAB
        .word handler-syntax-error             # 200, TAN
        .word handler-syntax-error             # 201, THEN
        .word handler-syntax-error             # 202, TO
        .word token-not-impl                   # 203, UNTIL
        .word handler-syntax-error             # 204, UPPER$
        .word handler-syntax-error             # 205, USR
        .word handler-syntax-error             # 206, VAL
        .word token-not-impl                   # 207, WHILE
        .word handler-syntax-error             # 208, +
        .word handler-syntax-error             # 209, -
        .word handler-syntax-error             # 210, -
        .word handler-syntax-error             # 211, *
        .word handler-syntax-error             # 212, /
        .word handler-syntax-error             # 213, %
        .word handler-syntax-error             # 214, ^
        .word handler-syntax-error             # 215, <>,!=
        .word handler-syntax-error             # 216, <=,=<
        .word handler-syntax-error             # 217, >=,=>
        .word handler-syntax-error             # 218, <
        .word handler-syntax-error             # 219, >
        .word handler-syntax-error             # 220, =
        .word handler-syntax-error             # 221, (
        .word handler-syntax-error             # 222, )
        .word handler-syntax-error             # 223, [
        .word handler-syntax-error             # 224, ]
        .word handler-syntax-error             # 225, ,
        .word handler-syntax-error             # 226, ;
        .word token-not-impl                   # 227, :
        .word token-not-impl                   # 228, undefined
        .word token-not-impl                   # 229, undefined
        .word token-not-impl                   # 230, undefined
        .word token-not-impl                   # 231, undefined
        .word token-not-impl                   # 232, undefined
        .word token-not-impl                   # 233, undefined
        .word token-not-impl                   # 234, undefined
        .word token-not-impl                   # 235, undefined
        .word token-not-impl                   # 236, undefined
        .word token-not-impl                   # 237, undefined
        .word token-not-impl                   # 238, undefined
        .word token-not-impl                   # 239, undefined
        .word token-not-impl                   # 240, undefined
        .word token-not-impl                   # 241, undefined
        .word token-not-impl                   # 242, undefined
        .word token-not-impl                   # 243, undefined
        .word token-not-impl                   # 244, undefined
        .word token-not-impl                   # 245, undefined
        .word token-not-impl                   # 246, undefined
        .word token-not-impl                   # 247, undefined
        .word token-not-impl                   # 248, undefined
        .word handler-syntax-error             # 249, REAL
        .word handler-assignment               # 250, VARIABLE
        .word handler-syntax-error             # 251, CODE_STRING
        .word handler-syntax-error             # 252, STRING
        .word handler-syntax-error             # 253, DWORD
        .word handler-syntax-error             # 254, WORD
        .word handler-syntax-error             # 255, BYTE
}
